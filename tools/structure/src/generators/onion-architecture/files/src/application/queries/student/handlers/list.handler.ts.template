import { IQueryHandler } from '@restaurant/core';
import { getTableColumns } from 'drizzle-orm';
import { inject, injectable } from 'inversify';
import { students } from '../../../../domain/entities/tables';
import { IStudentRepository } from '../../../../domain/repositories';
import { TYPES } from '../../../../types';
import { GetStudentsQuery } from '../definitions/list';
import { StudentQueryResponse } from '../definitions/response';

@injectable()
export class GetStudentsQueryHandler implements IQueryHandler<GetStudentsQuery, StudentQueryResponse[]> {
  queryToHandle = GetStudentsQuery.name;
  constructor(@inject(TYPES.StudentRepository) private readonly repository: IStudentRepository) {}

  async execute(_: GetStudentsQuery) {
    const resp = await this.repository.query.select(getTableColumns(students)).from(students);
    return resp;
  }
}
